!function(){angular.module("app",["ngRoute","xeditable"]).config(["$routeProvider","$locationProvider",function(e,t){t.hashPrefix(""),e.when("/login",{templateUrl:"templates/login.html",controller:"loginController"}).when("/register",{templateUrl:"templates/register.html",controller:"registerController"}).when("/products",{templateUrl:"templates/product.list.html",controller:"productListController"}).when("/products/:id",{templateUrl:"templates/product.html",controller:"productController"}).when("/users",{templateUrl:"templates/users.html",controller:"usersController"}).when("/users/:id",{templateUrl:"templates/user.details.html",controller:"usersDetailsController"}).when("/new_product",{templateUrl:"templates/add.product.html",controller:"addProductController"}).when("/my-profile",{templateUrl:"templates/my.profile.html",controller:"myProfileController"}).when("/categories",{templateUrl:"templates/categories.html",controller:"categoriesController"}).when("/categoryTree",{templateUrl:"templates/categories.tree.html",controller:"categoriesController"}).when("/categories/:id",{templateUrl:"templates/categories.details.html",controller:"categoriesDetailsController"}).when("/warehouses",{templateUrl:"templates/warehouses.html",controller:"warehousesController"}).when("/warehouses/:id",{templateUrl:"templates/warehouse.details.html",controller:"warehousesDetailsController"}).otherwise({redirectTo:"/"})}]).factory("httpRequestInterceptor",function(){return{request:function(e){return""!==localStorage.getItem("token")&&(e.headers.Authorization="JWT "+localStorage.getItem("token")),e}}}).config(["$httpProvider",function(e){e.interceptors.push("httpRequestInterceptor")}]).run(["editableOptions",function(e){e.theme="bs3"}])}();
!function(){angular.module("app").controller("addProductController",["$scope","apiService","$location",function(o,t,n){o.newProduct=function(){t.addProduct(o.product).then(function(){n.path("/products")})},t.getCategories().then(function(t){o.category=t.data})}])}();
!function(){angular.module("app").controller("categoriesController",["$http","$scope","$locale","apiService",function(t,e,a,n){n.getCategories().then(function(t){e.categories=[],angular.forEach(t.data,function(t){var a={id:t.id,name:t.name,parent:t.parent,createdAt:t.createdAt,updatedAt:t.updatedAt};null!=a.parent&&(a.parent=t.parent.name,a.id=t.id),e.categories.push(a)});var a=function(e){var n=t.data.filter(function(t){return(t.parent||{}).id==e});return n.forEach(function(t){t.children=a(t.id)}),n};e.data=a()})}])}();
!function(){angular.module("app").controller("categoriesDetailsController",["$http","$scope","$locale","apiService","$location","$routeParams",function(t,e,a,o,r,n){o.getCategory(n.id).then(function(t){e.category=t.data}),e.categoryUpdate=function(){o.categoryUpdate(e.category).then(function(t){e.category=t.data})},o.getCategories().then(function(t){e.categories=t.data}),e.back=function(){r.path("/categories")},e.addNewCategory=function(t){t.parent=e.category.id,o.addCategory(t)},e.removeCategory=function(){var t=[];t.push(e.category.id);var a=function(o){var r=e.categories.filter(function(t){return(t.parent||{}).id==o});r.forEach(function(e){t.push(e.id),a(e.id)})};a(e.category.id);for(var n=0;n<t.length;n++)n==t.length-1?o.removeCategory(t[n]).then(function(){r.path("/categories")}):o.removeCategory(t[n])}}])}();
!function(){angular.module("app").controller("loginController",["$http","apiService","$scope","$location",function(n,o,i,l){i.login=function(){o.login(i.user.email,i.user.password).then(function(){l.path("/")})}}])}();
!function(){angular.module("app").controller("mainController",["apiService","$scope",function(n,o){o.$watch(function(){return localStorage.getItem("token")},function(t){o.token=t,t&&n.getUserId().then(function(n){o.user=n.data})}),o.logout=function(){n.logout()}}])}();
!function(){angular.module("app").controller("myProfileController",["apiService","$scope","$location",function(e,o,n){e.getUserId().then(function(n){e.getUser(n.data.id).then(function(e){o.myProfile=e.data})}),o.myProfileUpdate=function(){e.myProfileUpdate(o.myProfile).then(function(e){o.myProfile=e.data})},o.checkPhone=function(e){var o=new RegExp(/^\(?(\d{2})\)?[- ]?(\d{3})[- ]?(\d{4})$/);if(!o.test(e))return"Your phone number should look like: 'xx-xxx-xxxx'"},o.removeMyProfile=function(){e.removeUser(o.myProfile.id).then(function(){e.logout(),n.path("/")})},o.back=function(){n.path("/")},o.changePassword=function(){}}])}();
!function(){angular.module("app").controller("productController",["$scope","apiService","$routeParams","$location",function(t,o,c,n){t.removeProduct=function(){o.removeProduct(c.id).then(function(){n.path("/products")})},t.productUpdate=function(){o.productUpdate(t.product).then(function(o){t.product=o.data})},o.getProduct(c.id).then(function(o){t.product=o.data}),o.getCategories().then(function(o){t.categories=o.data}),t.back=function(){n.path("/products")}}])}();
!function(){angular.module("app").controller("productListController",["$http","$scope","$locale","apiService","$location",function(t,o,a,c,r){c.getCategories().then(function(t){o.categories=t.data}),c.getProducts().then(function(t){o.allProducts=t.data,angular.forEach(o.allProducts,function(t){delete t.warehouses}),o.products=[],angular.forEach(t.data,function(t){t.category=t.category.name;var a=!1;angular.forEach(o.products,function(c,r){c[0].category===t.category&&(o.products[r].push(t),a=!0)}),a||(o.products.push([]),o.products[o.products.length-1].push(t))})}),o.add=function(){r.path("/new_product")}}])}();
!function(){angular.module("app").controller("registerController",["$http","apiService","$scope","$location",function(e,n,r,t){r.user={},r.register=function(){n.register(r.user).then(function(){t.path("/login")})}}])}();
!function(){angular.module("app").controller("usersController",["apiService","$scope",function(e,a){e.getUsers().then(function(e){a.users=[],angular.forEach(e.data,function(e){var t={id:e.id,name:e.name,email:e.email,createdAt:e.createdAt,updatedAt:e.updatedAt};a.users.push(t)})})}])}();
!function(){angular.module("app").controller("usersDetailsController",["apiService","$scope","$routeParams","$location",function(e,r,o,t){e.getUser(o.id).then(function(e){r.user=e.data}),r.userUpdate=function(){e.userUpdate(r.user).then(function(e){r.user=e.data})},r.removeUser=function(){e.deleteUser(o.id)},r.backUsers=function(){t.path("/users")},r.removeUser=function(){e.deleteUser(r.user.id).then(function(){t.path("/users")})},r.roles=[{role:"admin"},{role:"user"},{role:"warehouse owner"}],e.getRoles().then(function(e){r.rolesFromBackend=e.data}),r.tempUserForRole=[],r.userUpdateForRole=function(){var e=function(e,r){if(e.role==r.role)return delete e.id,!0};r.user.roles=_.intersectionWith(r.rolesFromBackend,r.tempUserForRole,e),r.userUpdate()}}])}();
!function(){angular.module("app").controller("warehousesController",["apiService","$scope",function(e,a){e.getWarehouses().then(function(e){a.warehouses=[],angular.forEach(e.data,function(e){var r={id:e.id,name:e.name,ownerId:e.ownerId,address:e.address,createdAt:e.createdAt,updatedAt:e.updatedAt};a.warehouses.push(r)})})}])}();
!function(){angular.module("app").controller("warehousesDetailsController",["apiService","$scope","$routeParams",function(e,o,a){e.getWarehouse(a.id).then(function(e){o.warehouse=e.data})}])}();
!function(){angular.module("app").service("apiService",["$http","$window",function(e,t){var r=t.urlBase||"http://81.2.254.9:1337";this.login=function(t,n){return e.post(r+"/user/login",{email:t,password:n}).then(function(e){localStorage.setItem("token",e.data.token)})},this.register=function(t){return e.post(r+"/user/register",{email:t.email,password:t.password,name:t.name,address:t.address,phone:t.phone,balance:t.balance,rights:t.rights})},this.getProducts=function(){return e.get(r+"/product")},this.getUsers=function(){return e.get(r+"/user")},this.getUser=function(t){return e.get(r+"/user/"+t)},this.getProduct=function(t){return e.get(r+"/product/"+t)},this.userUpdate=function(t){return e.put(r+"/user/"+t.id,t)},this.deleteUser=function(t){return e.delete(r+"/user/"+t)},this.addProduct=function(t){return e.post(r+"/product",{name:t.name,createdAt:new Date,updatedAt:new Date,category:t.category,price:t.price,description:t.description})},this.getCategories=function(){return e.get(r+"/category")},this.getCategory=function(t){return e.get(r+"/category/"+t)},this.categoryUpdate=function(t){return e.put(r+"/category/"+t.id,t)},this.logout=function(){localStorage.setItem("token","")},this.getUserId=function(){return e.get(r+"/user/me")},this.removeProduct=function(t){return e.delete(r+"/product/"+t)},this.productUpdate=function(t){return e.put(r+"/product/"+t.id,{name:t.name,createdAt:t.createdAt,updatedAt:new Date,category:t.category,price:t.price,description:t.description})},this.myProfileUpdate=function(t){return e.put(r+"/user/"+t.id,{email:t.email,name:t.name,address:t.address,phone:t.phone,updatedAt:new Date,rights:t.rights})},this.removeUser=function(t){return e.delete(r+"/user/"+t)},this.addCategory=function(t){return e.post(r+"/category",{name:t.name,parent:t.parent})},this.removeCategory=function(t){return e.delete(r+"/category/"+t)},this.getWarehouses=function(){return e.get(r+"/warehouse")},this.getWarehouse=function(t){return e.get(r+"/warehouse/"+t)},this.getRoles=function(){return e.get(r+"/role")}}])}();
!function(){angular.module("app").directive("categoryTree",function(){return{restrict:"E",scope:{data:"="},templateUrl:"script/directives/categories.tree/category.tree.html"}})}();
!function(){angular.module("app").directive("sortableListDirective",function(){return{restrict:"A",scope:{data:"=",link:"=",search:"="},controller:"sortableListController",templateUrl:"script/directives/sortable.list/table.html"}}).controller("sortableListController",["$scope",function(e){e.attributes=Object.keys(e.data[0]),e.propertyName=e.attributes[0],e.reverse=!1,e.sortBy=function(t){e.reverse=e.propertyName===t&&!e.reverse,e.propertyName=t}}])}();